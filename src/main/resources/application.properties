jdbc.driverClassName = com.mysql.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/2201simba?useUnicode=yes&characterEncoding=UTF-8
jdbc.username = root
jdbc.password = 123123123
hibernate.dialect = org.hibernate.dialect.MySQLDialect
hibernate.show_sql = true
hibernate.format_sql = false
#hibernate.hbm2dll = validate



spring.datasource.url = jdbc:mysql://localhost:3306/netgloo_blog?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


s3.accessKeyId=AKIAJDDPU5HGU5X5FCGA
s3.secretAccessKey=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
s3.region=us-west-2
s3.bucketName=cbu5
s3.endpoint=s3-us-west-2.amazonaws.com

csv.protocol = ${csv.protocol}
s3.expiration-time=${s3.expiration}